# This is a basic workflow to help you get started with Actions

name: demo-gitops
permissions:
  contents: write # required
  actions: read
  security-events: write
  statuses: write

on:
  push:
    branches: [ main ]
env:
  ECR_REPOSITORY: gitops-argocd

jobs:
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3
    
      # Authenticate to the container registry
    - name: Authenticate to registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
           
    - name: Build and tag image 
      id: build-image
      env:
        DOCKER_REGISTRY: roxsross12
        DOCKER_REPOSITORY: gitops-argocd

      run: |
        # Build a docker container and push it to ECR
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        docker build -t $DOCKER_REGISTRY/$DOCKER_REPOSITORY:${GITHUB_REF##*/}-$git_hash .
        echo "::set-output name=image::$DOCKER_REGISTRY/$DOCKER_REPOSITORY:${GITHUB_REF##*/}-$git_hash"
        echo "::set-output name=tag::$git_hash"

    - name: Push image to Amazon ECR
      id: push-image
      env:
        DOCKER_REGISTRY: roxsross12
        DOCKER_REPOSITORY: gitops-argocd

      run: |
        echo "Pushing image to DOCKER..."
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        docker push $DOCKER_REGISTRY/$DOCKER_REPOSITORY:${GITHUB_REF##*/}-$git_hash
        echo "::set-output name=image::$DOCKER_REGISTRY/$DOCKER_REPOSITORY:${GITHUB_REF##*/}-$git_hash"
        

    - name: Update Version
      run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version=$(cat ./charts/helm-example/values.yaml | grep version: | awk '{print $2}')
          sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/helm-example/values.yaml
          
    # - name: Commit and push changes
    #   uses: devops-infra/action-commit-push@v0.3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     commit_message: Version updated
